{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "CloudFormation template to deploy VPC networking components for Monitoring Infrastructure",
    
    "Parameters": {
        "SSHLocation" : {
            "Description" : " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },

    "Resources": {
        "MonitoringVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16",
                "EnableDnsSupport" : "True",
                "EnableDnsHostnames" : "True",
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "VPC for Monitoring Infrastructure"} 
                ]
            }
        },
   
        "MonitoringSubnetOne": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.0.0/24",
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "First Subnet for Monitoring Infrastructure"} 
                ]
            }
        },

        "MonitoringSubnetTwo": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.1.0/24",
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Second Subnet for Monitoring Infrastructure"}
                ]
            }
        },

        "DBSubnetOne": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.2.0/24",
                "Tags" : [
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "First Subnet for RDS Database Infrastructure"}
                ]
            }
        },

        "DBSubnetTwo": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.3.0/24",
                "Tags" : [
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Second Subnet for RDS Database Infrastructure"}
                ]
            }
        },

        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "RDS Database Subnet Group Identifier",
                "SubnetIds": [
                    { "Ref": "DBSubnetOne" },
                    { "Ref": "DBSubnetTwo" }
                ],
                "Tags" : [
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Subnet Group for RDS Database Infrastructure"}
                ]
            }
        },

        "CacheSubnetOne": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.4.0/24",
                "Tags" : [
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "First Subnet for Elasticache Cluster Infrastructure"}
                ]
            }
        },

        "CacheSubnetTwo": {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "MonitoringVPC" },
                "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "CidrBlock" : "10.0.5.0/24",
                "Tags" : [
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Second Subnet for Elasticache Cluster Infrastructure"}
                ]
            }
        },

        "CacheSubnetGroup": {
            "Type": "AWS::ElastiCache::SubnetGroup",
            "Properties": {
                "Description": "Elasticache Cluster Subnet Group",
                "SubnetIds": [
                    { "Ref": "CacheSubnetOne" },
                    { "Ref": "CacheSubnetTwo" }
                ]
            }
        },

        "MonitoringInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Internet Gateway for Monitoring Infrastructure"} 
                ]
            }
        },

        "MonitoringAttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "InternetGatewayId": {
                    "Ref": "MonitoringInternetGateway"
                }
            }
        },

        "MonitoringRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Custom Routing Table for Monitoring Infrastructure"}
                ]
            }
        },

        "MonitoringPublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "MonitoringAttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "MonitoringRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "MonitoringInternetGateway"
                }
            }
        },

        "MonitoringSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "MonitoringSubnetOne"
                },
                "RouteTableId": {
                    "Ref": "MonitoringRouteTable"
                }
            }
        },

        "MonitoringSubnetRouteTableAssociationTwo": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "MonitoringSubnetTwo"
                },
                "RouteTableId": {
                    "Ref": "MonitoringRouteTable"
                }
            }
        },

        "MonitoringNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Network ACL for Monitoring Infrastructure VPC"}
                ]
            }
        },

        "InboundHTTPNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },

        "InboundHTTPSNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                },
                "RuleNumber": "101",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },

        "InboundSSHNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                },
                "RuleNumber": "102",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "22",
                    "To": "22"
                }
            }
        },

        "InboundResponsePortsNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },

        "OutBoundNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                }
            }
        },

        "SubnetNetworkAclAssociationOne": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "MonitoringSubnetOne"
                },
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                }
            }
        },

        "SubnetNetworkAclAssociationTwo": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "MonitoringSubnetTwo"
                },
                "NetworkAclId": {
                    "Ref": "MonitoringNetworkAcl"
                }
            }
        },

        "MonitoringELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Open HTTP/S ports for access to ELB",
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }],
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Security Group for Monitoring ELB for Grafana Web Servers"}
                ]
            }
        },

        "GrafanaWebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP access on port 80 and SSH access",
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "SourceSecurityGroupId": {
                        "Ref": "MonitoringELBSecurityGroup"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": { "Ref" : "SSHLocation" }
                }],
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Security Group for Grafana Web Servers"}
                ]
            }
        },

        "DBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable database access for Grafana Web Servers",
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "3306",
                    "ToPort": "3306",
                    "SourceSecurityGroupId": {
                        "Ref": "GrafanaWebServerSecurityGroup"
                    }
                }],
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Security Group for RDS Database Cluster"}
                ]
            }
        },

        "ElasticacheSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable Elasticache access for Grafana Web Servers",
                "VpcId": {
                    "Ref": "MonitoringVPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "11211",
                    "ToPort": "11211",
                    "SourceSecurityGroupId": {
                        "Ref": "GrafanaWebServerSecurityGroup"
                    }
                }],
                "Tags" : [ 
                    {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}},
                    {"Key" : "Description", "Value" : "Security Group for Elasticache Cluster"}
                ]
            }
        }
    },
    
    "Outputs": {
            "MonitoringVpcId": {
                "Description" : "Resource ID of Monitoring VPC",
                "Value": { "Ref": "MonitoringVPC" }
            },

            "MonitoringSubnetOneId" : {
                "Description" : "Resource ID of first Grafana Web Server Subnet",
                "Value" : { "Ref" : "MonitoringSubnetOne" }
            },

            "MonitoringSubnetTwoId" : {
                "Description" : "Resource ID of second Grafana Web Server Subnet",
                "Value" : { "Ref" : "MonitoringSubnetTwo" }
            },

            "DBSubnetGroupId" : {
                "Description" : "Resource ID of RDS Database Subnet Group",
                "Value" : { "Ref" : "DBSubnetGroup" }
            },

            "CacheSubnetGroupId" : {
                "Description" : "Resource ID of Elasticache Cluster Subnet Group",
                "Value" : { "Ref" : "CacheSubnetGroup" }
            },

           "ELBSecurityGroupId" : {
               "Description": "Resource ID of ELB Security Group",
                "Value" : { "Ref" : "MonitoringELBSecurityGroup" }
           },

           "GrafanaWebServerSecurityGroupId" : {
               "Description": "Resource ID of Grafana Web Server Security Group",
                "Value" : { "Ref" : "GrafanaWebServerSecurityGroup" }
           },

           "DBSecurityGroupId" : {
               "Description": "Resource ID of RDS Database Security Group",
                "Value" : { "Ref" : "DBSecurityGroup" }
           },

           "ElasticacheSecurityGroupId": {
               "Description": "Resource ID of Elasticache Security Group",
                "Value" : { "Ref" : "ElasticacheSecurityGroup" }
           }
    }
}
